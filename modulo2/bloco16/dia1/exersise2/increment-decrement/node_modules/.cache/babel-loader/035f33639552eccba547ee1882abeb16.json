{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/berchon/trybe/trybe-exercises/modulo2/bloco16/dia1/exersise2/increment-decrement/src/components/ClickComponent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { plus, minus } from '../actions';\n\nclass ClickComponent extends Component {\n  updateInput(event) {\n    document.getElementsByName(event.target.name)[0].value = event.target.value;\n  }\n\n  render() {\n    let plusValue = 0;\n    let minusValue = 0;\n    console.log(plusValue);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"plus\",\n          children: \"Valor \\xE0 incrementar:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: plusValue,\n          onChange: this.updateInput,\n          name: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.add(plusValue),\n          children: \"Incrementar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"minus\",\n          children: \"Valor \\xE0 decrementar:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: minusValue,\n          onChange: event => minusValue = event.target.value,\n          name: \"minus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.subtract(minusValue),\n          children: \"Decrementar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Valor atual: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  add: value => dispatch(plus(value)),\n  subtract: value => dispatch(minus(value))\n});\n\nexport default connect(null, mapDispatchToProps)(ClickComponent);","map":{"version":3,"sources":["/home/berchon/trybe/trybe-exercises/modulo2/bloco16/dia1/exersise2/increment-decrement/src/components/ClickComponent.js"],"names":["React","Component","connect","plus","minus","ClickComponent","updateInput","event","document","getElementsByName","target","name","value","render","plusValue","minusValue","console","log","props","add","subtract","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,YAA5B;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAErCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBC,IAAAA,QAAQ,CAACC,iBAAT,CAA2BF,KAAK,CAACG,MAAN,CAAaC,IAAxC,EAA8C,CAA9C,EAAiDC,KAAjD,GAAyDL,KAAK,CAACG,MAAN,CAAaE,KAAtE;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,CAAhB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACA,wBACE;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAEA,SAFT;AAGE,UAAA,QAAQ,EAAE,KAAKR,WAHjB;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKY,KAAL,CAAWC,GAAX,CAAeL,SAAf,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAEC,UAFT;AAGE,UAAA,QAAQ,EAAGR,KAAD,IAAWQ,UAAU,GAAIR,KAAK,CAACG,MAAN,CAAaE,KAHlD;AAIE,UAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKM,KAAL,CAAWE,QAAX,CAAoBL,UAApB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAqBE;AAAA,+BACE;AAAA,mDAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AArCoC;;AAwCvC,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCH,EAAAA,GAAG,EAAEP,KAAK,IAAIU,QAAQ,CAACnB,IAAI,CAACS,KAAD,CAAL,CADgB;AAEtCQ,EAAAA,QAAQ,EAAER,KAAK,IAAIU,QAAQ,CAAClB,KAAK,CAACQ,KAAD,CAAN;AAFW,CAAL,CAAnC;;AAMA,eAAeV,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkChB,cAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { plus, minus } from '../actions';\n\nclass ClickComponent extends Component {\n\n  updateInput(event) {\n    document.getElementsByName(event.target.name)[0].value = event.target.value;\n  }\n\n  render() {\n    let plusValue = 0;\n    let minusValue = 0;\n    console.log(plusValue)\n    return (\n      <div>\n        <div>\n          <label htmlFor=\"plus\">Valor à incrementar:</label>\n          <input\n            type=\"number\"\n            value={plusValue}\n            onChange={this.updateInput}\n            name=\"plus\"\n          />\n          <button onClick={() => this.props.add(plusValue)}>Incrementar</button>\n        </div>\n        <div>\n          <label htmlFor=\"minus\">Valor à decrementar:</label>\n          <input\n            type=\"number\"\n            value={minusValue}\n            onChange={(event) => minusValue =  event.target.value}\n            name=\"minus\"\n          />\n          <button onClick={() => this.props.subtract(minusValue)}>Decrementar</button>\n        </div>\n        <div>\n          <p>Valor atual: <strong>0</strong></p>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  add: value => dispatch(plus(value)),\n  subtract: value => dispatch(minus(value)),\n\n});\n\nexport default connect(null, mapDispatchToProps)(ClickComponent);\n"]},"metadata":{},"sourceType":"module"}