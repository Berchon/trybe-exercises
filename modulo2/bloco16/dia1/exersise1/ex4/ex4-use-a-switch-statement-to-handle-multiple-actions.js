<div><h2 class="text-center challenge-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Redux: Use uma instrução Switch para lidar com várias ações</font></font></h2><div class="challenge-instructions redux"><div><section id="description">
<p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Você pode dizer ao Redux store como lidar com vários tipos de ação. </font><font style="vertical-align: inherit;">Digamos que você esteja gerenciando a autenticação do usuário em sua loja Redux. </font><font style="vertical-align: inherit;">Você deseja ter uma representação de estado para quando os usuários estão conectados e quando estão desconectados. </font><font style="vertical-align: inherit;">Você representa isso com um único objeto de estado com a propriedade </font></font><code>authenticated</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Você também precisa de criadores de ação que criam ações correspondentes ao login e logout do usuário, junto com os próprios objetos de ação.</font></font></p></section></div><hr><div><section id="instructions">
<p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O editor de código tem uma loja, ações e criadores de ação configurados para você. </font><font style="vertical-align: inherit;">Preencha a </font></font><code>reducer</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">função para lidar com várias ações de autenticação. </font><font style="vertical-align: inherit;">Use uma </font></font><code>switch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">instrução </font><font style="vertical-align: inherit;">JavaScript </font><font style="vertical-align: inherit;">no </font></font><code>reducer</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">para responder a diferentes eventos de ação. </font><font style="vertical-align: inherit;">Este é um padrão padrão na escrita de redutores Redux. </font><font style="vertical-align: inherit;">A instrução switch deve ser alternada </font></font><code>action.type</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">e retornar ao estado de autenticação apropriado.</font></font></p><p><strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Nota:</font></font></strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;"> &nbsp;neste ponto, não se preocupe com a imutabilidade do estado, uma vez que é pequeno e simples neste exemplo. </font><font style="vertical-align: inherit;">Para cada ação, você pode retornar um novo objeto - por exemplo </font></font><code>{authenticated: true}</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">,. </font><font style="vertical-align: inherit;">Além disso, não se esqueça de escrever um </font></font><code>default</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">caso em sua instrução switch que retorne o atual </font></font><code>state</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Isso é importante porque, uma vez que seu aplicativo tem vários redutores, eles são executados sempre que um despacho de ação é feito, mesmo quando a ação não está relacionada a esse redutor. </font><font style="vertical-align: inherit;">Nesse caso, você deseja certificar-se de que retornou a corrente </font></font><code>state</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></section></div><hr></div></div>

<div class="challenge-test-suite"><div aria-label="Pass - <p>Calling the function loginUser should return an object with type property set to the string LOGIN.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Chamar a função </font></font><code>loginUser</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">deve retornar um objeto com a propriedade type definida para a string </font></font><code>LOGIN</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>Calling the function logoutUser should return an object with type property set to the string LOGOUT.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Chamar a função </font></font><code>logoutUser</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">deve retornar um objeto com a propriedade type definida para a string </font></font><code>LOGOUT</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>The store should be initialized with an object with an authenticated property set to false.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O armazenamento deve ser inicializado com um objeto com uma </font></font><code>authenticated</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">propriedade definida como </font></font><code>false</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>Dispatching loginUser should update the authenticated property in the store state to true.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O despacho </font></font><code>loginUser</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">deve atualizar a </font></font><code>authenticated</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">propriedade no estado da loja para </font></font><code>true</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>Dispatching logoutUser should update the authenticated property in the store state to false.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O despacho </font></font><code>logoutUser</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">deve atualizar a </font></font><code>authenticated</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">propriedade no estado da loja para </font></font><code>false</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>The authReducer function should handle multiple action types with a switch statement.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">A </font></font><code>authReducer</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">função deve lidar com vários tipos de ação com uma </font></font><code>switch</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">instrução.</font></font></p></div></div></div>


const defaultState = {
  authenticated: false
};

const authReducer = (state = defaultState, action) => {
  // Change code below this line
  switch (action.type){
    case 'LOGIN':
      return { authenticated: true }
    default:
      return { authenticated: false }
  }
  // Change code above this line
};

const store = Redux.createStore(authReducer);

const loginUser = () => {
  return {
    type: 'LOGIN'
  }
};

const logoutUser = () => {
  return {
    type: 'LOGOUT'
  }
};
