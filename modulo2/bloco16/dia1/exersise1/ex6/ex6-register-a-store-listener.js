<div><h2 class="text-center challenge-title"><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Redux: registre um ouvinte da loja</font></font></h2><div class="challenge-instructions redux"><div><section id="description">
<p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Outro método ao qual você tem acesso no </font></font><code>store</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">objeto </font><font style="vertical-align: inherit;">Redux </font><font style="vertical-align: inherit;">é </font></font><code>store.subscribe()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">. </font><font style="vertical-align: inherit;">Isso permite que você assine funções de ouvinte na loja, que são chamadas sempre que uma ação é despachada na loja. </font><font style="vertical-align: inherit;">Um uso simples para esse método é inscrever uma função em sua loja que simplesmente registra uma mensagem sempre que uma ação é recebida e a loja é atualizada.</font></font></p></section></div><hr><div><section id="instructions">
<p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Escreva uma função de retorno de chamada que aumente a variável global </font></font><code>count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">sempre que o armazenamento receber uma ação e passe essa função para o </font></font><code>store.subscribe()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">método. </font><font style="vertical-align: inherit;">Você verá que </font></font><code>store.dispatch()</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">é chamado três vezes seguidas, cada vez passando diretamente um objeto de ação. </font><font style="vertical-align: inherit;">Observe a saída do console entre os despachos de ação para ver as atualizações ocorrendo.</font></font></p></section></div><hr></div></div>

<div class="challenge-test-suite"><div aria-label="Pass - <p>Dispatching the ADD action on the store should increment the state by 1.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Despachar a </font></font><code>ADD</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">ação na loja deve incrementar o estado em </font></font><code>1</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>There should be a listener function subscribed to the store using store.subscribe.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Deve haver uma função de ouvinte inscrita na loja usando </font></font><code>store.subscribe</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">.</font></font></p></div></div><div aria-label="Pass - <p>The callback to store.subscribe should also increment the global count variable as the store is updated.</p>" class="test-result"><div class="test-status-icon"><span class="sr-only">Passed</span><svg height="50" viewBox="0 0 200 200" width="50" xmlns="http://www.w3.org/2000/svg"><g><title>Passed</title><circle cx="100" cy="99" fill="var(--primary-color)" r="95" stroke="var(--primary-color)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null"></circle><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(-45, 120, 106.321)" width="128.85878" x="55.57059" y="91.32089"></rect><rect fill="var(--primary-background)" height="30" stroke="var(--primary-background)" stroke-dasharray="null" stroke-linecap="null" stroke-linejoin="null" transform="rotate(45, 66.75, 123.75)" width="80.66548" x="26.41726" y="108.75"></rect></g></svg></div><div aria-hidden="true" class="test-output" xs="10"><p><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">O retorno de chamada para </font></font><code>store.subscribe</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">também deve incrementar a </font></font><code>count</code><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">variável </font><font style="vertical-align: inherit;">global </font><font style="vertical-align: inherit;">conforme o armazenamento é atualizado.</font></font></p></div></div></div>


const ADD = 'ADD';

const reducer = (state = 0, action) => {
  switch(action.type) {
    case ADD:
      return state + 1;
    default:
      return state;
  }
};

const store = Redux.createStore(reducer);

// Global count variable:
let count = 0;

// Change code below this line
store.subscribe(() => { count += 1 })
// Change code above this line

store.dispatch({type: ADD});
console.log(count);
store.dispatch({type: ADD});
console.log(count);
store.dispatch({type: ADD});
console.log(count);
