{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/berchon/trybe/trybe-exercises/modulo2/bloco12/dia2/my-form-2.0/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport FormErrors from './FormErrors';\nconst states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      let {\n        name,\n        value\n      } = event.target;\n      if (name === 'name') value = value.toUpperCase();\n      if (name === 'address') value = this.validateAddress(value);\n      this.updateState(name, value);\n    };\n\n    this.onBlurHandler = event => {\n      let {\n        name,\n        value\n      } = event.target;\n      if (name === 'city') value = value.match(/^\\d/) ? '' : value;\n      this.updateState(name, value);\n    };\n\n    this.validateAddress = address => address.replace(/[^\\w\\s]/gi, '');\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      address: '',\n      city: '',\n      countryState: '',\n      addressType: '',\n      resume: '',\n      role: '',\n      roleDescription: '',\n      hasEntered: false,\n      formErrors: {\n        email: '',\n        password: ''\n      }\n    };\n  }\n\n  updateState(name, value) {\n    this.setState(state => ({\n      [name]: value,\n      formErrors: { ...state.formErrors,\n        [name]: this.validateField(name, value)\n      }\n    }));\n  }\n\n  validateField(fieldName, value) {\n    switch (fieldName) {\n      case 'email':\n        const isValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2})$/i);\n        return isValid ? '' : ' is invalid';\n\n      default:\n        break;\n    }\n\n    return '';\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Dados pessoais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"name\",\n              name: \"name\",\n              maxLength: \"40\",\n              required: true,\n              value: this.state.name,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              maxLength: \"50\",\n              required: true,\n              value: this.state.email,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"CPF:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cpf\",\n              maxLength: \"11\",\n              required: true,\n              value: this.state.cpf,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Endere\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address\",\n              maxLength: \"200\",\n              required: true,\n              value: this.state.address,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              maxLength: \"28\",\n              required: true,\n              value: this.state.city,\n              onBlur: this.onBlurHandler,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Estado:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"countryState\",\n              required: true,\n              value: this.state.countryState,\n              onChange: this.changeHandler,\n              children: states.map((value, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: value\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Dados profissionais:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Resumo do curr\\xEDculo:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"resume\",\n              maxLength: \"1000\",\n              required: true,\n              value: this.state.resume,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Cargo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"role\",\n              maxLength: \"40\",\n              required: true,\n              value: this.state.role,\n              onChange: this.changeHandler,\n              onMouseEnter: () => {\n                alert('Preencha com cuidado esta informação.');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [\"Descri\\xE7\\xE3o do cargo:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"roleDescription\",\n              maxLength: \"500\",\n              value: this.state.roleDescription,\n              onChange: this.changeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(FormErrors, {\n          formErrors: this.state.formErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/berchon/trybe/trybe-exercises/modulo2/bloco12/dia2/my-form-2.0/src/App.js"],"names":["React","Component","FormErrors","states","App","constructor","props","changeHandler","event","name","value","target","toUpperCase","validateAddress","updateState","onBlurHandler","match","address","replace","handleSubmit","preventDefault","state","email","cpf","city","countryState","addressType","resume","role","roleDescription","hasEntered","formErrors","password","setState","validateField","fieldName","isValid","render","map","key","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport FormErrors from './FormErrors';\n\nconst states = ['Rio de Janeiro', 'Minas Gerais', 'Amapá', 'Amazonas', 'São Paulo', 'Ceará', 'Distrito Federal'];\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      cpf: '',\n      address: '',\n      city: '',\n      countryState: '',\n      addressType: '',\n      resume: '',\n      role: '',\n      roleDescription: '',\n      hasEntered: false,\n      formErrors: {email: '', password: ''},\n    };\n  }\n\n  changeHandler = event => {\n    let { name, value } = event.target;\n\n    if(name === 'name') value = value.toUpperCase()\n\n    if(name === 'address') value = this.validateAddress(value)\n\n    this.updateState(name, value)\n  }\n\n  onBlurHandler = event => {\n    let { name, value } = event.target;\n\n    if(name === 'city') value = value.match(/^\\d/) ? '' : value\n\n    this.updateState(name, value)\n  }\n\n  updateState(name, value) {\n    this.setState((state) => ({\n      [name]: value,\n      formErrors: {\n        ...state.formErrors,\n        [name]: this.validateField(name, value)\n      }\n    }));\n  }\n\n  validateAddress = address => address.replace(/[^\\w\\s]/gi, '')\n\n  handleSubmit = event => {\n    event.preventDefault();\n  }\n\n  validateField(fieldName, value) {\n\n    switch(fieldName) {\n      case 'email':\n        const isValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2})$/i)\n        return isValid ? '' : ' is invalid';\n      default:\n        break;\n    }\n\n    return '';\n  }\n\n  render () {\n    return (\n      <div>\n        <form>\n          <fieldset>\n            <legend>Dados pessoais</legend>\n            <div className=\"container\">\n              Nome:\n              <input\n                type=\"name\"\n                name=\"name\"\n                maxLength=\"40\"\n                required\n                value={this.state.name}\n                onChange={this.changeHandler}\n              />\n            </div>\n            <div className=\"container\">\n              Email:\n              <input\n                type=\"email\"\n                name=\"email\"\n                maxLength=\"50\"\n                required\n                value={this.state.email}\n                onChange={this.changeHandler}\n              />\n            </div>\n            <div className=\"container\">\n              CPF:\n              <input\n                type=\"text\"\n                name=\"cpf\"\n                maxLength=\"11\"\n                required\n                value={this.state.cpf}\n                onChange={this.changeHandler}\n              />\n            </div>\n            <div className=\"container\">\n              Endereço:\n              <input\n                type=\"text\"\n                name=\"address\"\n                maxLength=\"200\"\n                required\n                value={this.state.address}\n                onChange={this.changeHandler}\n              />\n            </div>\n            <div className=\"container\">\n              Cidade:\n              <input\n                type=\"text\"\n                name=\"city\"\n                maxLength=\"28\"\n                required\n                value={this.state.city}\n                onBlur={this.onBlurHandler}\n                onChange={this.changeHandler}\n              />\n            </div>\n            <div className=\"container\">\n              Estado:\n              <select\n                name=\"countryState\"\n                required\n                value={this.state.countryState}\n                onChange={this.changeHandler}\n              >\n                  {states.map((value, key) =>\n                    <option key={key}>{value}</option>\n                    )\n                  }\n              </select>\n            </div>\n          </fieldset>\n          <fieldset>\n            <legend>Dados profissionais:</legend>\n              <div className=\"container\">\n                Resumo do currículo:\n                <textarea\n                  name=\"resume\"\n                  maxLength=\"1000\"\n                  required\n                  value={this.state.resume}\n                  onChange={this.changeHandler}\n                />\n              </div>\n              <div className=\"container\">\n                Cargo:\n                <input\n                  type=\"text\"\n                  name=\"role\"\n                  maxLength=\"40\"\n                  required\n                  value={this.state.role}\n                  onChange={this.changeHandler}\n                  onMouseEnter={() => {\n                    alert('Preencha com cuidado esta informação.');\n                  }}\n                />\n              </div>\n              <div className=\"container\">\n                Descrição do cargo:\n                <textarea\n                  name=\"roleDescription\"\n                  maxLength=\"500\"\n                  value={this.state.roleDescription}\n                  onChange={this.changeHandler}\n                />\n              </div>\n            </fieldset>\n          </form>\n        <div className=\"container\">\n          <FormErrors formErrors={this.state.formErrors} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}